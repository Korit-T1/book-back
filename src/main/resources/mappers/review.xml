<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.t1.bookDrop.repository.ReviewMapper">

    <resultMap id="ReviewResultMap" type="com.t1.bookDrop.entity.Review">
        <id property="reviewId" column="review_id"/>
        <result property="bookId" column="book_id"/>
        <result property="userId" column="user_id"/>
        <result property="username" column="username"/>
        <result property="content" column="content"/>
        <result property="rating" column="rating"/>
        <result property="createDate" column="create_date"/>
        <result property="updateDate" column="update_date"/>
    </resultMap>

    <insert id="saveReview" parameterType="com.t1.bookDrop.entity.Review">
        insert into review_tb
        values(
            0,
            #{bookId},
            #{userId},
            #{content},
            #{rating},
            now(),
            null
        )
    </insert>

    <select id="findReviewsAllByBookId" resultMap="ReviewResultMap">
        select
            rt.review_id,
            rt.book_id,
            rt.user_id,
            ut.username,
            rt.content,
            rt.rating,
            rt.create_date
        from
            review_tb rt
            left outer join user_tb ut on(ut.user_id = rt.user_id)
        where
            rt.book_id = #{book_id}
        limit
            #{index}, 4
    </select>

    <select id="findReviewCount" resultType="int">
        select
            count(*)
        from
            review_tb rt
            left outer join user_tb ut on(ut.user_id = rt.user_id)
        where
            rt.book_id = #{book_id}
    </select>



</mapper>